(require "search.scm")
(require "problem.scm")
(require "sort.scm")
(require "node.scm")
(require "jump.scm")
(load "heuristic.scm")
(load "8puzzle.scm")

(define jump10 (jump-problem 10))
(define jumpstate10-1 (list 10 0 0))
(define jumpstate10-2 (list 10 0 4))
(define jumpstate10-3 (list 10 2 2))
(define jumpstate10-4 (list 10 2 1))
(define jumpstate10-5 (list 10 7 5))
(display "\nheuristic function on state: (10 0 0) expected output: 3\n actual:")
(display (jump-heuristic jumpstate10-1 jump10))
(display "\nheuristic function on state: (10 0 4) expected output: 4\n actual:")
(display (jump-heuristic jumpstate10-2 jump10))
(display "\nheuristic function on state: (10 2 2) expected output: 3\n actual:")
(display (jump-heuristic jumpstate10-3 jump10))
(display "\nheuristic function on state: (10 2 1) expected output: 3\n actual:")
(display (jump-heuristic jumpstate10-4 jump10))
(display "\nheuristic function on state: (10 7 5) expected output: inf\n actual:")
(display (jump-heuristic jumpstate10-4 jump10))



(define jump5 (jump-problem 5))
(define jumpstate5-1 (list 5 0 0))
(define jumpstate5-2 (list 5 5 5))
(define jumpstate5-3 (list 5 2 2))
(display "\nheuristic function on state: (5 0 0) expected output: 1\n actual:")
(display (jump-heuristic jumpstate5-1 jump5))
(display "\nheuristic function on state: (5 0 0) expected output: 1\n actual:")
(display (jump-heuristic jumpstate5-2 jump5))